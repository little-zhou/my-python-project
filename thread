"""
@Author: danyzhou
@Updated: 4/7/24 3:52 PM

Advantest Confidential - All Rights Reserved
"""

import threading
import time


class MyThread(threading.Thread):
    def run(self) -> None:
        for i in range(5):
            print(f'thread {self.name}, @number: {i}')
            time.sleep(1)


def main():
    print('Start main threading')

    threads = [MyThread() for i in range(3)]

    for thread in threads:
        thread.start()

    # main thread finish after sub thread finish
    for t in threads:
        t.join()

    print('End main threading.................')


if __name__ == '__main__':
    main()

    # lock = threading.Lock()
    # lock.acquire()
    # lock.release()
    #
    # reentrant
    # r_lock = threading.RLock()
